 #!/usr/bin/env bash
set -eEuo pipefail

cd "$(dirname "${BASH_SOURCE[0]}")"

source .env
export COMPOSE_PROJECT_NAME="${SERVER}"
export API_BRANCH="${API_BRANCH:-main}"
export APP_BRANCH="${APP_BRANCH:-main}"

case "${1-}" in
        up)
            export VAULT_ADDR=https://vault.dide.ic.ac.uk:8200
            VAULT_TOKEN=$(vault login -method=github -token-only)
            export VAULT_TOKEN

            hdb_username=$(vault read -field=username "secret/certbot-hdb/credentials")
            hdb_password=$(vault read -field=password "secret/certbot-hdb/credentials")

            cat >hdb-credentials <<EOF
HDB_ACME_USERNAME=$hdb_username
HDB_ACME_PASSWORD=$hdb_password
EOF

            docker volume create mint-tls
            ACME_BUDDY_IMAGE=ghcr.io/reside-ic/acme-buddy:main
            echo "*** Starting acme-buddy container"
            docker run -d \
                --pull always \
                --name mint-acme-buddy \
                --publish 2112:2112 \
                --volume mint-tls:/tls \
                --volume /var/run/docker.sock:/var/run/docker.sock \
                --env ACME_BUDDY_STAGING \
                --env-file hdb-credentials \
                "$ACME_BUDDY_IMAGE" \
                --domain "$SERVER.dide.ic.ac.uk" \
                --email reside@imperial.ac.uk \
                --dns-provider hdb \
                --certificate-path /tls/certificate.pem \
                --key-path /tls/key.pem \
                --account-path /tls/account.json \
                --reload-container proxy-nginx


            [ -d "mint" ] || git clone https://github.com/mrc-ide/mint.git
            git -C mint checkout "${APP_BRANCH}"
            docker-compose up -d
            ;;
        pull)
            git -C mint fetch
            git -C mint checkout "${APP_BRANCH}"
	    git -C mint reset --hard "origin/${APP_BRANCH}"
            docker-compose pull
            docker-compose up -d
            ;;
        down)
            docker stop mint-acme-buddy
            docker rm mint-acme-buddy
            docker-compose down
            ;;
        *)
            echo $"Usage: $0 {up|pull|down}"
            exit 1
esac
